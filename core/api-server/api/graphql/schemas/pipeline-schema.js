const { gql } = require('apollo-server');

const pipelineTypeDefs = gql`
type Cron { enabled: Boolean pattern: String }

type Triggers { cron: Cron ,pipelines: [String]}

type ConcurrentPipelines { amount: Int rejectOnFailure: Boolean }

type Webhooks { progress:String, result:String }

type Streaming { flows:Object, defaultFlow:String }

type Options { batchTolerance: Int
  ttl: Int
  progressVerbosityLevel: String
  concurrentPipelines: ConcurrentPipelines 
  activeTtl: Int
}

type Metrics { tensorboard: Boolean }
type Snapshot{
              name: String
}

type HyperParams{
                name: String
                suggest: String
                high: String
                low: String
                choices: [String]
}
type Spec {
            name: String
            id: String
            snapshot: Snapshot
            description: String
            mem: String
            cpu: String
            objectivePipeline: String
            numberOfTrials: Int
            hyperParams: [HyperParams]
  }
type Retry { policy: String limit: Int }

type PipelineNodes { 
  nodeName: String
  algorithmName: String
  ttl: Int
  includeInResult: Boolean
  batchOperation: String
  metrics: Metrics
  retry: Retry
  spec: Spec
  kind: String
  stateType: String
  input: [Object]
 }

type FlowInput { mul: Int data: Int }

type Pipeline { 
  modified: Float
  kind: String
  name: String
  description: String
  priority: Int
  experimentName: String
  triggers: Triggers
  options: Options
  webhooks: Webhooks
  streaming: Streaming
  nodes: [PipelineNodes ]
  flowInput: FlowInput 
}
type Metrics { tensorboard: Boolean }

type AutogeneratedPipelines { list: [Pipeline ],pipelinesCount:Int }

extend type Query {
    pipelines:AutogeneratedPipelines
}

`;

module.exports = pipelineTypeDefs;
