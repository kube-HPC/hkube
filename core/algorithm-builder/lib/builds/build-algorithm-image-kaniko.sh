#!/usr/bin/env bash

# This script used to create a specific algorithm image
set -e
source $PWD/lib/builds/build-utils.sh

#myVar=$(sed -n '/^nodejs=\(.*\)$/s//\1/p' base-versions)
export IMAGE_NAME=${IMAGE_NAME}
export BUILD_PATH=${BUILD_PATH}
export BASE_IMAGE=${BASE_IMAGE}
export DOCKER_PULL_REGISTRY=${DOCKER_PULL_REGISTRY}
export DOCKER_PULL_USER=${DOCKER_PULL_USER}
export DOCKER_PULL_PASS=${DOCKER_PULL_PASS}
export DOCKER_PUSH_REGISTRY=${DOCKER_PUSH_REGISTRY}
export DOCKER_PUSH_USER=${DOCKER_PUSH_USER}
export DOCKER_PUSH_PASS=${DOCKER_PUSH_PASS}
export PACKAGES_REGISTRY=${PACKAGES_REGISTRY}
export PACKAGES_TOKEN=${PACKAGES_TOKEN}
export PACKAGES_USERNAME=${PACKAGES_USERNAME}
export PACKAGES_PASSWORD=${PACKAGES_PASSWORD}
export REMOVE_IMAGE=${REMOVE_IMAGE}
export TMP_FOLDER=${TMP_FOLDER:-/tmp}
export INSECURE_PULL=${INSECURE_PULL}
export INSECURE=${INSECURE}
export SKIP_TLS_VERIFY_PULL=${SKIP_TLS_VERIFY_PULL}
export SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY}

echo
echo IMAGE_NAME=${IMAGE_NAME}
echo BUILD_PATH=${BUILD_PATH}
echo BASE_IMAGE=${BASE_IMAGE}
echo DOCKER_PULL_REGISTRY=${DOCKER_PULL_REGISTRY}
echo INSECURE_PULL=${INSECURE_PULL:-"false"}
echo SKIP_TLS_VERIFY_PULL=${SKIP_TLS_VERIFY_PULL:-"false"}
echo DOCKER_PUSH_REGISTRY=${DOCKER_PUSH_REGISTRY}
echo SKIP_TLS_VERIFY=${SKIP_TLS_VERIFY:-"false"}
echo INSECURE=${INSECURE:-"false"}
echo PACKAGES_REGISTRY=${PACKAGES_REGISTRY}
echo REMOVE_IMAGE=${REMOVE_IMAGE}
echo TMP_FOLDER=${TMP_FOLDER}
echo

echo
dockerBuildKaniko ${IMAGE_NAME} ${BUILD_PATH} ${TMP_FOLDER}/workspace ${TMP_FOLDER}/commands "${BASE_IMAGE}" "${PACKAGES_REGISTRY}" "${PACKAGES_TOKEN}" "${INSECURE}" "${INSECURE_PULL}" "${SKIP_TLS_VERIFY}" "${SKIP_TLS_VERIFY_PULL}"
ret=${exit_code}
echo build finished with code $ret
echo

exit $ret
